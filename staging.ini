###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:backend

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

webpack_dist_dir = %(here)s/frontend/dist
wingcash_api_url = https://api3020775872.wingcash.org/
wingcash_profile_id = 5820583106

# Test Credentials Only
sqlalchemy_url = postgres://bbwilkes:ferlytestdb2deviceToken@18.217.173.132:5432/ferlytestdb2
stripe_api_key = sk_test_qKBWyn69ZthiQNbQiEEDFLCF
twilio_auth_token = 6fd09e541762b03af259a4f87082f3b7
twilio_from = +15005550006
twilio_sid = AC66b552a4b00de0b8360589c07f961f63
#wingcash_api_token = t4616783830-6667013126-dlovSD_TFZO8WeMqdAa-m70RnrU
wingcash_client_id = 4616783830
wingcash_client_secret = nTRJ5EZXYgFO6V5FMt62tY2CB60
distributor_uid = wingcash:5820583106
distributor_manager_uid = username:sample1

usps_address_info_url = http://production.shippingapis.com/ShippingAPITest.dll

# These are the credentials for the staging Amazon Cognito app client.
cognito_client_id = vbtids04edgu71rarcahqucas
cognito_client_secret = 1udbgqongv5vrf8utnv2i83kod994hs7kmek6nka08lf64ss7t8o
cognito_domain = ferlystaff.auth.us-east-2.amazoncognito.com
cognito_region = us-east-2
cognito_userpool_id = us-east-2_OttkjsDRT

# Disable secure cookies because staging is sometimes accessed as localhost
# without SSL.
secure_cookie = false

retry.attempts = 3

filter-with = translogger

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False
filter-with = prefix

[filter:prefix]
# This filter makes the app respect X-Forwarded-Proto and other ELB headers.
use = egg:PasteDeploy#prefix

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
listen = localhost:6543
# listen = 10.1.10.6:44225

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, backend, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_backend]
level = DEBUG
handlers =
qualname = backend

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
