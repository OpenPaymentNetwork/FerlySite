"""notification_table

Revision ID: 0018
Revises: 0017
Create Date: 2020-04-08 10:25:40.553454

"""
from alembic import op
from sqlalchemy.dialects.postgresql import BYTEA
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence
import os
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0018'
down_revision = '0017'
branch_labels = None
depends_on = None

sequence_key_table = sa.table(
    'sequence_key',
    sa.column('seq_name', sa.String),
    sa.column('key_index', sa.Integer),
    sa.column('skip32_key', BYTEA),
)

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.bulk_insert(sequence_key_table, [{
        'seq_name': 'notification_seq',
        'key_index': 0,
        'skip32_key': os.urandom(10),
    }])
    op.execute(CreateSequence(Sequence("notification_seq")))
    op.create_table('notification',
    sa.Column('id', sa.String(), server_default=sa.text("skip32_hex_seq(nextval('notification_seq'), 'notification_seq')"), nullable=False),
    sa.Column('transfer_id', sa.String(), nullable=False),
    sa.Column('customer_id', sa.String(), nullable=False),
    sa.Column('sentDate', sa.DateTime(), server_default=sa.text("timezone('UTC', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification'))
    )
    op.create_foreign_key(op.f('fk_notification_customer_id_customer'), 'notification', 'customer', ['customer_id'], ['id'])
    op.create_index(op.f('ix_notification_customer_id'), 'notification', ['customer_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notification_customer_id'), table_name='notification')
    op.drop_table('notification')
    op.execute(DropSequence(Sequence("notification_seq")))
    op.execute("DELETE FROM sequence_key WHERE seq_name = 'notification_seq'")
    # ### end Alembic commands ###